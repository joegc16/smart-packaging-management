# return All users
GET http://localhost:8080/academics/api/users
Accept: application/json

# return Sensor Id
GET http://localhost:8080/academics/api/sensors/1
Accept: application/json

-----ORDERS----
# All Orders
GET http://localhost:8080/academics/api/orders

#Order Details
GET http://localhost:8080/academics/api/orders/1
Accept: application/json

# Order Create
POST http://localhost:8080/academics/api/orders
{

  "customerId": 3,
  "manufacturerId": 1,
  "logisticOperatorId" : 5,
  "orderDate": "2024-02-12",
  "deliveryDate": null,
  "estimatedDeliveryTime": "1 week",
  "packageLocation": "Coimbra",
  "city": "Coimbra",
  "postalCode": "3000-000",
  "country": "Portugal",
  "address": "Rua do Brasil",
  "paymentMethod": "Credit Card",
  "status": "Pending",
  "count" : 25.98,
  "orderItems": [
    {
      "productPackageId": 2,
      "quantity": 2,
      "subPrice": 12.99
    },
    {
      "productPackageId": 4,
      "quantity": 1,
      "subPrice": 12.99
    }
    ]
}
# OrderItems by Order Id
GET http://localhost:8080/academics/api/orders/3/items

# Order Sensors Id
GET http://localhost:8080/academics/api/orders/1/sensors

#Order Update by Id
PUT http://localhost:8080/academics/api/orders/1
{
  "deliveryDate": "2024-02-11",
  "estimatedDeliveryTime": "2024-02-15",
  "packageLocation": "Coimbra",
  "status": "Sending"
}


-----PRODUCTS
# Products All
GET http://localhost:8080/academics/api/products/

# Product create
POST http://localhost:8080/academics/api/products/
{
  "name": "Product 2",
  "brand": "Some other Brand",
  "description": "another best product ever",
  "totalQuantity": 180,
  "manufacturerId": 1
}

# Product by Id
GET http://localhost:8080/academics/api/products/3

# Product Delete by Id
DELETE http://localhost:8080/academics/api/products/3

# Product Update by Id
PUT http://localhost:8080/academics/api/products/3
{
  "name": "Product updated",
  "brand": "Some Updated Brand",
  "description": "another best product ever",
  "totalQuantity": 180,
  "manufacturerUsername": "joao"
}


-----PACKAGES------
# Package All
GET http://localhost:8080/academics/api/packages/

# Package create
POST http://localhost:8080/academics/api/packages/
{
  "name": "Package 1",
  "packageType": 3,
  "material": "Plastic",
  "sensorsTypes": [
    {
      "id": 1
    },
    {
      "id": 2
    }
  ]
}

# Package by Id
GET http://localhost:8080/academics/api/packages/5

# Package Update by Id
PUT http://localhost:8080/academics/api/packages/5

{
  "name": "Package 1",
  "packageType": 3,
  "material": "Plastic",
  "sensorsTypes": [
    {
      "id": 1
    }
  ]
}

# Package Delete by Id
DELETE http://localhost:8080/academics/api/packages/6

.-------PRODUCTPACKAGE
### ProductPackage All
GET http://localhost:8080/academics/api/productPackages/

### ProductPackage by Id
GET http://localhost:8080/academics/api/productPackages/5

### ProductPackage create
POST http://localhost:8080/academics/api/productPackages/

{
  "productCode": 1,
  "packageCode": 3,
  "price": 12.99,
  "quantityProductsInPackage": 10,
  "image": "Not Available"
}

### ProductPackage Update by Id
PUT http://localhost:8080/academics/api/productPackages/5

{
  "price": 15.99,
  "quantityProductsInPackage": 24,
  "image": "Not Available"
}

### ProductPackage Delete by Id
DELETE http://localhost:8080/academics/api/productPackages/5


------MANUFACTURER---------
### Manufacturer Id
GET http://localhost:8080/academics/api/manufacturers/1

### Manufacturer Products
GET http://localhost:8080/academics/api/manufacturers/1/products

### Manufacturer Orders
GET http://localhost:8080/academics/api/manufacturers/1/orders

### Manufacturer Create
POST http://localhost:8080/academics/api/manufacturers/

{
    "username": "JoeMax",
    "password": "123",
    "name": "Joe",
    "email": "joemax@gmail.com",
  "role": 1
}

### Manufacturer Update by Id
PUT http://localhost:8080/academics/api/manufacturers/5

{
    "username": "JoeMax",
    "password": "123",
    "name": "Joe",
    "email": "joeUpdates@gmail.com",
    "role": 1
}

### Manufacturer Delete by Id
DELETE http://localhost:8080/academics/api/manufacturers/5

--------LOGISTICS---------------
### LogisticOperator Id
GET http://localhost:8080/academics/api/logistic-operators/5
Accept: application/json

### LogisticOperator Orders
GET http://localhost:8080/academics/api/logistic-operators/5/orders
Accept: application/json

### LogisticOperator Create
POST http://localhost:8080/academics/api/logistic-operators/
Content-Type: application/json

{
  "username": "LogisticMax",
  "password": "123",
  "name": "Logistic",
  "email": "maxi@gmail.com",
  "role": 3
}

### LogisticOperator Delete by Id
DELETE http://localhost:8080/academics/api/logistic-operators/5

### LogisticOperator Update by Id
PUT http://localhost:8080/academics/api/logistic-operators/5
Content-Type: application/json

{
  "username": "LogisticMaxUpdated",
  "password": "123",
  "name": "Logistic",
  "email": "newemail@gmail.com",
  "role": 3
}

--------CUSTOMER------------------
### Customer Id Details DONE 
GET http://localhost:8080/academics/api/customers/5
Accept: application/json
Authorization: Bearer eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJDdXN0b21lck1heCIsImlhdCI6MTcwODEwNTA1NSwiZXhwIjoxNzA4MTA4NjU1fQ.tCdk_lwORShihyaDGad4j7ptBzzAErWOphxqVrBqvEjIKJiK1mUMtEsU_mW0sP-S

### Customer Orders
GET http://localhost:8080/academics/api/customers/2/orders
Accept: application/json

### Customer Cart
GET http://localhost:8080/academics/api/customers/3/cart
Accept: application/json

### Customer Create  DONEEEE
POST http://localhost:8080/academics/api/customers/
Content-Type: application/json

{
  "username": "CustomerMax",
  "password": "123",
  "name": "Customer",
  "email": "hola@gmail.com",
  "role": 2
}

### Customer Update by Id DONEEEEE
PUT http://localhost:8080/academics/api/customers/5
Content-Type: application/json

{
  "username": "CustomerNew",
  "password": "123",
  "name": "Customer",
  "email": "updatedmeail@gmail.com",
  "role": 2
}

### Customer Delete by Id DONEEEE
DELETE http://localhost:8080/academics/api/customers/6


---------------CART--------------
### CartItem Create
POST http://localhost:8080/academics/api/carts/2/items/
Content-Type: application/json

{
  "productPackageId": 2,
  "quantity": 1,
  "subPrice": 4.99
}

### CartItem Remove by Id
DELETE http://localhost:8080/academics/api/carts/2/items/5

### CartItem Update by Id
PATCH http://localhost:8080/academics/api/carts/2/items/4
Content-Type: application/json

{
  "quantity": 3,
  "subPrice": 14.97
}

### CartItem Clean
PUT http://localhost:8080/academics/api/carts/2/clean

--------------TOKEN------------------
### REQUEST JWT TOKEN
POST http://localhost:8080/academics/api/auth/login
Content-Type: application/json
Accept: application/json

{
  "username": "CustomerMax",
  "password": "123"
}